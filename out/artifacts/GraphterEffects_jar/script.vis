edge labels:
    "wolf",
    "type:Goat" as goat,
    "type:Cabbage" as cabbage,
    "type:Boat" as boat,
    "type:Bank" as bank,
    "on",
    "in",
    "likes",
    "moored",
    "go",
    "flag:left" as leftBank,
    "flag:right" as rightBank.

shape(water, rectangle).
colour(water, blue).
dimensions(water, 1000, 200).

wolf(X, X); goat(X, X); cabbage(X, X) ->
    passenger(X).

passenger(X), passenger(Y) ->
    noOverlap(X, Y).

wolf(X, X) ->
    image(X, "src/test/resources/demo/images/wolf.png"),
    dimensions(X, 128, 128).

goat(X, X) ->
    image(X, "src/test/resources/demo/images/sheep.png"),
    dimensions(X, 128, 128).

cabbage(X, X) ->
    image(X, "src/test/resources/demo/images/cabbage.png"),
    dimensions(X, 128, 128).

boat(X, X) ->
    image(X, "src/test/resources/demo/images/boat.png"),
    dimensions(X, 450, 190),
    enclosedHorizontal(X, water),
    above(X, water, -50),
    before(X, water).

bank(X, X) ->
    shape(X, rectangle),
    colour(X, green),
    alignBottom(X, water).

bank(X, X), bank(Y, Y) ->
    sameWidth(X, Y).

boat(X, X), bank(Y, Y) ->
    alignTop(X, Y).

leftBank(X, X) ->
    left(X, water, 0).

rightBank(X, X) ->
    right(X, water, 0).

on(Passenger, Bank) ->
    above(Passenger, Bank, -20),
    enclosedHorizontal(Passenger, Bank),
    before(Passenger, Bank).

in(Passenger, Boat) ->
    above(Passenger, Boat, -70),
    enclosedHorizontal(Passenger, Boat),
    alignHorizontal(Passenger, Boat),
    before(Passenger, Boat).

moored(Boat, Bank); go(Boat, Bank) ->
    horizontalDistance(Boat, Bank, 0).

// --- Legend ---
shape(legend, rectangle).
colour(legend, lightpink).
above(legend, water, 400).
alignLeft(legend, water).
zPos(legend, -1).

passenger(X), image(X, Path) -> image([X, mini], Path), dimensions([X, mini], 64, 64).

likes(X, Y, Z) ->
    image(Z, "src/test/resources/demo/images/heart.png"),
    dimensions(Z, 64, 64),
    left([X, mini], Z),
    left(Z, [Y, mini]),
    alignVertical([X, mini], Z),
    alignVertical(Z, [Y, mini]),
    enclosed([X, mini], legend),
    enclosed([Y, mini], legend),
    enclosed(Z, legend).
